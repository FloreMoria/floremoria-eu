@{
    var prodotti = ViewBag.Prodotti as List<FloreMoria.Models.Prodotto>;
}

<div class="px-4 sm:px-8 pt-24 bg-gray-100">
    <div class="container mx-auto">
        <div>
            <h2 class="text-2xl font-semibold leading-tight">Ordini</h2>
        </div>

        <div class="flex flex-col sm:flex-row justify-between items-center my-4">
            <div class="flex items-center mb-4 sm:mb-0">
                <label for="itemsPerPage" class="mr-2 text-sm text-gray-600">Elementi per pagina:</label>
                <select id="itemsPerPage" class="border border-gray-300 rounded px-3 py-2 text-sm focus:outline-none focus:ring focus:ring-indigo-200 bg-white">
                    <option value="10">10</option>
                    <option value="20">20</option>
                    <option value="50">50</option>
                </select>
            </div>

            <div class="relative w-full sm:w-auto bg-white">
                <input type="text" id="searchInput" placeholder="Cerca..." class="border border-gray-300 rounded pl-10 pr-3 py-2 text-sm w-full focus:outline-none focus:ring focus:ring-indigo-200" />
                <svg class="absolute left-3 top-1/2 transform -translate-y-1/2 h-5 w-5 text-gray-400" fill="none" stroke="currentColor" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M21 21l-6-6m2-6a7 7 0 11-14 0 7 7 0 0114 0z"></path>
                </svg>
            </div>
        </div>

        <div class="-mx-4 sm:-mx-8 px-4 sm:px-8 py-4">
            <div class="inline-block w-full shadow-lg rounded-lg overflow-x-auto">
                <div class="overflow-x-auto w-full">
                    <table class="w-full leading-normal">
                        <thead>
                            <tr>
                                <th class="px-5 py-3 border-b border-gray-200 bg-gray-200 text-left text-xs font-semibold text-gray-600 uppercase tracking-wider">
                                    Data Ordine
                                </th>
                                <th class="px-5 py-3 border-b border-gray-200 bg-gray-200 text-left text-xs font-semibold text-gray-600 uppercase tracking-wider">
                                    Nome Utente
                                </th>
                                <th class="px-5 py-3 border-b border-gray-200 bg-gray-200 text-left text-xs font-semibold text-gray-600 uppercase tracking-wider">
                                    Totale
                                </th>
                                <th class="px-5 py-3 border-b border-gray-200 bg-gray-200 text-left text-xs font-semibold text-gray-600 uppercase tracking-wider">
                                    Rateizzato
                                </th>
                                <th class="px-5 py-3 border-b border-gray-200 bg-gray-200 text-left text-xs font-semibold text-gray-600 uppercase tracking-wider">
                                    Rate completate
                                </th>
                                <th class="px-5 py-3 border-b border-gray-200 bg-gray-200 text-left text-xs font-semibold text-gray-600 uppercase tracking-wider">
                                    Rata corrente
                                </th>
                                <th class="px-5 py-3 border-b border-gray-200 bg-gray-200 text-left text-xs font-semibold text-gray-600 uppercase tracking-wider">
                                    Azioni
                                </th>
                                <th class="px-5 py-3 border-b border-gray-200 bg-gray-200 text-left text-xs font-semibold text-gray-600 uppercase tracking-wider">
                                    Gestito
                                </th>
                            </tr>
                        </thead>
                        <tbody id="tableBody">
                            @foreach (var item in Model)
                            {
                                <tr>
                                    <td class="px-5 py-5 border-b border-gray-200 bg-white text-sm">@item.DataOrdine.ToString("dd/MM/yyyy")</td>
                                    <td class="px-5 py-5 border-b border-gray-200 bg-white text-sm whitespace-nowrap">@item.ApplicationUser.Nome @item.ApplicationUser.Cognome</td>
                                    <td class="px-5 py-5 border-b border-gray-200 bg-white text-sm">@item.Totale</td>
                                    <td class="px-5 py-5 border-b border-gray-200 bg-white text-sm">@(item.PagamentoRateale ? "SI" : "NO")</td>
                                    <td class="px-5 py-5 border-b border-gray-200 bg-white text-sm">@(item.CompletamentePagato ? "SI" : "NO")</td>
                                    <td class="px-5 py-5 border-b border-gray-200 bg-white text-sm">@(item.PagamentoRateale ? item.RataCorrente : "")</td>
                                    <td class="px-5 py-5 border-b border-gray-200 bg-white text-sm">
                                        <section x-data="{modalOpen: false}">
                                            <div class="container mx-auto">
                                                <button x-on:click="modalOpen = true"
                                                        class="px-4 py-1 text-base font-medium text-white rounded-full bg-[#38679D] cursor-pointer whitespace-nowrap">
                                                    Dettagli
                                                </button>
                                            </div>
                                            <div x-show="modalOpen"
                                                 x-transition
                                                 x-cloak
                                                 class="fixed top-0 left-0 flex items-center justify-center w-full h-full min-h-screen px-4 py-5 bg-gray-800/90 z-[2000]">
                                                <div x-on:click.outside="modalOpen = false"
                                                     class="w-full max-w-[570px] rounded-[20px] bg-white dark:bg-dark-2 py-12 px-8 text-center md:py-[60px] md:px-[70px]">
                                                    <h3 class="pb-[18px] text-xl font-semibold text-dark dark:text-white sm:text-2xl">
                                                        Data Ordine: @item.DataOrdine.ToString("dd/MM/yyyy")
                                                    </h3>
                                                    <h3 class="pb-[18px] text-xl font-semibold text-dark dark:text-white sm:text-2xl">
                                                        Importo totale: @item.Totale €
                                                    </h3>
                                                    <span class="mx-auto mb-6 inline-block h-1 w-[90px] rounded bg-blue-100"></span>
                                                    <h3 class="pb-[18px] text-lg font-semibold text-dark dark:text-white sm:text-2xl">
                                                        Prodotti:
                                                    </h3>
                                                    @foreach (var d in item.Dettaglio)
                                                    {
                                                        if (d.AbbonamentoId != null)
                                                        {
                                                            var abbonamento = prodotti.FirstOrDefault(x => x.Id == d.AbbonamentoId);
                                                            <p class="mb-2 text-base leading-relaxed text-body-color dark:text-dark-6">
                                                                @(d.Quantita)x - @abbonamento.Nome → @d.Prodotto.Nome (@d.Prezzo €)
                                                            </p>
                                                        }
                                                        else
                                                        {
                                                            <p class="mb-2 text-base leading-relaxed text-body-color dark:text-dark-6">
                                                                @(d.Quantita)x - @d.Prodotto.Nome (@d.Prezzo €)
                                                            </p>
                                                        }
                                                        if (d.Colore != FloreMoria.Enums.Colore.Nessuno)
                                                        {
                                                            <span class="text-base block">- Colore dei fiori: @d.Colore</span>
                                                        }
                                                        if (d.NotaConsegna != null)
                                                        {
                                                            <span class="text-base block">- Nota Consegna: @d.NotaConsegna</span>
                                                        }
                                                        if (d.NotaFiori != null && d.NotaFiori != "")
                                                        {
                                                            <span class="text-base block mb-4">- Nota Fiori: @d.NotaFiori</span>
                                                        }
                                                        if (item.Dettaglio.Count > 1)
                                                        {
                                                            <p class="mb-4 pb-2 border-b border-gray-300">
                                                                <span class="text-base">- Defunto: @(d.NomeDestinatario) @(d.CognomeDestinatario)</span>
                                                                <span class="text-base">- Data Nascita: @(d.DataNascita?.ToString("dd/MM/yyyy") ?? "n.c.") - Data Morte: @(d.DataMorte?.ToString("dd/MM/yyyy")?? "n.c.")</span>
                                                                <span class="text-base">- Indirizzo: @(d.Indirizzo)</span>
                                                            </p>
                                                        }
                                                    }

                                                    @if (item.Dettaglio.Count == 1)
                                                    {

                                                        var dettaglio = (item.Dettaglio as List<FloreMoria.Models.Dettaglio>).FirstOrDefault();

                                                        <span class="mx-auto my-6 inline-block h-1 w-[90px] rounded bg-blue-100"></span>
                                                        <h3 class="pb-[18px] text-lg font-semibold text-dark dark:text-white sm:text-2xl">
                                                            Destinatario: @(dettaglio?.NomeDestinatario) @(dettaglio?.CognomeDestinatario)
                                                        </h3>
                                                        <h3 class="pb-[18px] text-lg font-semibold text-dark dark:text-white sm:text-2xl">
                                                            Data Nascita: @(dettaglio?.DataNascita?.ToString("dd/MM/yyyy") ?? "n.c.") - Data Morte: @(dettaglio?.DataMorte?.ToString("dd/MM/yyyy") ?? "n.c.")
                                                        </h3>
                                                        <h3 class="pb-[18px] text-lg font-semibold text-dark dark:text-white sm:text-2xl">
                                                            Indirizzo: @(dettaglio?.Indirizzo)
                                                        </h3>
                                                    }
                                                    <div class="flex flex-wrap -mx-3 mt-7">
                                                        <div class="w-1/2 px-3">
                                                            <button x-on:click="modalOpen = false"
                                                                    class="block w-full p-2 text-base font-medium text-center transition border rounded-md border-stroke text-dark dark:text-white hover:border-[#38679D] hover:bg-[#38679D] hover:text-white">
                                                                Chiudi
                                                            </button>
                                                        </div>
                                                    </div>
                                                </div>
                                            </div>
                                        </section>
                                    </td>
                                    <td class="px-5 py-5 border-b border-gray-200 bg-white text-sm">
                                        <div>
                                            <input type="checkbox"
                                                   @(item.Gestito ? "checked" : "")
                                                   onchange="toggleGestito('@item.Id', this)"
                                                   class="w-4 h-4 text-[#38679D] bg-gray-100 border-gray-300 rounded focus:ring-[#38679D] focus:ring-2">
                                        </div>
                                    </td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>
                <div class="px-5 py-5 bg-white border-t flex flex-col xs:flex-row items-center xs:justify-between">
                    <span id="paginationInfo" class="text-xs xs:text-sm text-gray-900">
                        Mostrando <span id="startItem">1</span> a <span id="endItem">5</span> di <span id="totalItems">@Model.Count</span> elementi
                    </span>

                    <div class="inline-flex mt-2 xs:mt-0">
                        <button id="prevButton" class="text-sm bg-gray-300 hover:bg-gray-400 text-gray-800 font-semibold py-2 px-4 rounded-l">
                            Precedente
                        </button>
                        <button id="nextButton" class="text-sm bg-gray-300 hover:bg-gray-400 text-gray-800 font-semibold py-2 px-4 rounded-r">
                            Successivo
                        </button>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<script defer>
    document.addEventListener('DOMContentLoaded', function() {
        const itemsPerPageSelect = document.getElementById('itemsPerPage');
        const searchInput = document.getElementById('searchInput');
        const tableBody = document.getElementById('tableBody');
        const paginationInfo = document.getElementById('paginationInfo');
        const prevButton = document.getElementById('prevButton');
        const nextButton = document.getElementById('nextButton');

        if (!itemsPerPageSelect || !searchInput || !tableBody || !paginationInfo || !prevButton || !nextButton) {
            console.error('Uno o più elementi non sono stati trovati nel DOM.');
            return;
        }

        let currentPage = 1;
        let itemsPerPage = parseInt(itemsPerPageSelect.value);
        let searchTerm = '';
        let allRows = Array.from(tableBody.querySelectorAll('tr'));

        function updatePagination() {
            let startIndex = (currentPage - 1) * itemsPerPage;
            let endIndex = Math.min(startIndex + itemsPerPage, allRows.length);
            let totalPages = Math.ceil(allRows.length / itemsPerPage);

            allRows.forEach(row => row.style.display = 'none');

            for (let i = startIndex; i < endIndex; i++) {
                allRows[i].style.display = '';
            }

            const startItem = document.getElementById('startItem');
            const endItem = document.getElementById('endItem');
            const totalItems = document.getElementById('totalItems');

            if (startItem && endItem && totalItems) {
                startItem.textContent = startIndex + 1;
                endItem.textContent = endIndex;
                totalItems.textContent = allRows.length;
            } else {
                console.error('Uno o più elementi interni a paginationInfo non sono stati trovati.');
                return;
            }

            prevButton.disabled = currentPage === 1;
            nextButton.disabled = currentPage === totalPages || totalPages === 0;
        }

        function filterRows() {
            searchTerm = searchInput.value.toLowerCase();
            allRows = Array.from(tableBody.querySelectorAll('tr'));
            allRows.forEach(row => {
                const textContent = row.textContent.toLowerCase();
                row.style.display = textContent.includes(searchTerm) ? '' : 'none';
            });
            allRows = allRows.filter(row => row.style.display !== 'none');
            currentPage = 1;
            updatePagination();
        }


        itemsPerPageSelect.addEventListener('change', function() {
            itemsPerPage = parseInt(this.value);
            currentPage = 1;
            updatePagination();
        });

        searchInput.addEventListener('input', filterRows);

        prevButton.addEventListener('click', function() {
            if (currentPage > 1) {
                currentPage--;
                updatePagination();
            }
        });

        nextButton.addEventListener('click', function() {
            let totalPages = Math.ceil(allRows.length / itemsPerPage);
            if (currentPage < totalPages) {
                currentPage++;
                updatePagination();
            }
        });

        updatePagination();
    });
</script>
<script defer>
    function toggleGestito(ordineId, checkbox) {
        // Disabilita temporaneamente la checkbox
        checkbox.disabled = true;

        $.ajax({
            url: '/Admin/GestisciOrdine',
            type: 'POST',
            data: { id: ordineId },
            success: function (response) {
                // Mostra un feedback visivo
                Swal.fire({
                    title: 'Successo!',
                    text: 'Stato ordine aggiornato con successo!',
                    icon: 'success',
                    timer: 2000,
                    showConfirmButton: false,
                    confirmButtonColor: '#38679D'
                });
            },
            error: function (xhr, status, error) {
                // In caso di errore, ripristina lo stato precedente
                checkbox.checked = !checkbox.checked;

                Swal.fire({
                    title: 'Errore',
                    text: 'Si è verificato un errore durante l\'aggiornamento.',
                    icon: 'error',
                    confirmButtonText: 'Ok',
                    confirmButtonColor: '#38679D'
                });
            },
            complete: function () {
                // Riabilita la checkbox
                checkbox.disabled = false;
            }
        });
    }
</script>
